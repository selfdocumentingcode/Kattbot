root = true

# C# files
[*.cs]

### Core EditorConfig Options ###

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4
max_line_length = 120

# New line preferences
end_of_line = crlf
insert_final_newline = true

# Visual Studio
csharp_style_namespace_declarations = file_scoped # Use file scoped namespace by default for new class files

### Naming styles ###

# Naming rules

dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.symbols = private_or_internal_static_field
dotnet_naming_rule.private_or_internal_static_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_field_should_be__fieldname.severity = suggestion
dotnet_naming_rule.private_or_internal_field_should_be__fieldname.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be__fieldname.style = _fieldname

dotnet_naming_rule.local_should_be_camelcase.severity = warning
dotnet_naming_rule.local_should_be_camelcase.symbols = local
dotnet_naming_rule.local_should_be_camelcase.style = camelcase

dotnet_naming_rule.constant_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.constant_field_should_be_pascal_case.symbols = constant_field
dotnet_naming_rule.constant_field_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.private_or_internal_static_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_static_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_static_field.required_modifiers = static

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers =

dotnet_naming_symbols.local.applicable_kinds = local
dotnet_naming_symbols.local.applicable_accessibilities = local
dotnet_naming_symbols.local.required_modifiers =

dotnet_naming_symbols.constant_field.applicable_kinds = field
dotnet_naming_symbols.constant_field.applicable_accessibilities = *
dotnet_naming_symbols.constant_field.required_modifiers = const

# Naming styles

dotnet_naming_style._fieldname.required_prefix = _
dotnet_naming_style._fieldname.required_suffix =
dotnet_naming_style._fieldname.word_separator =
dotnet_naming_style._fieldname.capitalization = camel_case

dotnet_naming_style.camelcase.required_prefix =
dotnet_naming_style.camelcase.required_suffix =
dotnet_naming_style.camelcase.word_separator =
dotnet_naming_style.camelcase.capitalization = camel_case

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

### Stylecop rules ###

# Default rulesets:
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/StyleCop.Analyzers/StyleCop.Analyzers.CodeFixes/rulesets/StyleCopAnalyzersDefault.ruleset

# Readability

dotnet_diagnostic.sa1101.severity = none # Prefix local calls with this

# Ordering

dotnet_diagnostic.sa1200.severity = none # Using directive should appear within a namespace declaration
dotnet_diagnostic.sa1201.severity = suggestion # Elements should appear in the correct order
dotnet_diagnostic.sa1202.severity = suggestion # Elements should be ordered by access

# Naming

dotnet_diagnostic.sa1309.severity = none # Field names should not begin with underscore
dotnet_diagnostic.sa1312.severity = none # Variable names must being with lower-case letter

# Maintainability

dotnet_diagnostic.sa1402.severity = suggestion # File may only contain a single type

# Layout rules

dotnet_diagnostic.sa1502.severity = none # Element should not be on a single line
dotnet_diagnostic.sa1503.severity = none # Braces should not be omitted
dotnet_diagnostic.sa1515.severity = suggestion # Single-line comment should be preceded by blank line
# Documentation

dotnet_diagnostic.sa1600.severity = none # Elements should be documented
dotnet_diagnostic.sa1601.severity = none # Partial elements should be documented
dotnet_diagnostic.sa1602.severity = none # Enumeration items should be documented
dotnet_diagnostic.sa1611.severity = none # Element parameter should be documented
dotnet_diagnostic.sa1615.severity = none # Element return value should be documented
dotnet_diagnostic.sa1633.severity = none # File should have header
dotnet_diagnostic.sa1649.severity = none # File name should match first type name

### .NET Code-style rules ###

# Expression-level preferences

dotnet_diagnostic.ide0032.severity = suggestion # Use auto-implemented property

# Modifier preferences

dotnet_diagnostic.ide0044.severity = warning # Add readonly modifier

# Naming

dotnet_diagnostic.ide1006.severity = warning # Naming rule violation

# Unnecessary code rules

dotnet_diagnostic.ide0058.severity = none # Remove unnecessary expression value
dotnet_diagnostic.ide0290.severity = none # Use primary constructor

### .NET Code-quality rules ###

# Reliability

dotnet_diagnostic.ca2016.severity = warning # Forward the CancellationToken parameter to methods that take one

# Usage

dotnet_diagnostic.ca2208.severity = warning # Instantiate argument exceptions correctly

### C# compiler messages ###

# Level 4 warning messages

dotnet_diagnostic.cs1591.severity = none # Missing XML comment for publicly visible type or member

### SYSLIB diagnostics ###

# Source-generated code

dotnet_diagnostic.syslib1045.severity = none # Convert to 'GeneratedRegexAttribute'.

### Rider auto-generated rules ###

# Microsoft .NET properties
csharp_preserve_single_line_blocks = true
csharp_style_var_elsewhere = false:none
csharp_style_var_for_built_in_types = false:none
csharp_style_var_when_type_is_apparent = true:none
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:none

# ReSharper properties
resharper_blank_lines_after_control_transfer_statements = 1
resharper_blank_lines_around_single_line_auto_property = 1
resharper_braces_for_for = required
resharper_braces_for_foreach = required
resharper_braces_for_ifelse = not_required
resharper_braces_for_while = required
resharper_braces_redundant = false
resharper_csharp_empty_block_style = together
resharper_csharp_insert_final_newline = true
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_wrap_after_declaration_lpar = true
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_csharp_wrap_before_binary_opsign = true
resharper_csharp_wrap_extends_list_style = chop_always
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_for_built_in_types = use_var_when_evident
resharper_for_other_types = use_var_when_evident
resharper_instance_members_qualify_declared_in =
resharper_keep_existing_embedded_block_arrangement = false
resharper_keep_existing_enum_arrangement = false
resharper_nested_ternary_style = expanded
resharper_parentheses_same_type_operations = true
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_expr_property_on_single_line = true
resharper_place_field_attribute_on_same_line = false
resharper_place_simple_embedded_statement_on_same_line = true
resharper_place_simple_initializer_on_single_line = false
resharper_trailing_comma_in_multiline_lists = true
